{
  "openapi": "3.0.2",
  "info": {
    "title": "Mahlzeit-API",
    "description": "Backend API for the Hallo-Mahlzeit.de web app",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.hallo-mahlzeit.de/v1"
    },
    {
      "url": "http://localhost:8081/v1"
    }
  ],
  "tags": [
    {
      "name": "Customers"
    },
    {
      "name": "Orders"
    },
    {
      "name": "Canteens"
    },
    {
      "name": "Components",
      "description": "components are items of food"
    }
  ],
  "paths": {
    "/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "getCustomerList",
        "responses": {
          "200": {
            "description": "Returns list of customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "getCustomerByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Customer ID"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "operationId": "addCustomerByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of customer",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Adds a customer"
          },
          "400": {
            "description": "Invalid Customer ID"
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "operationId": "deleteCustomerByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes a customer"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "operationId": "patchCustomerByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "field",
            "in": "header",
            "description": "field to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates a customer"
          },
          "204": {
            "description": "Field not found"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "getOrderList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all orders of a customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "getOrderByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerId",
            "in": "header",
            "description": "ID of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a order of a customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "operationId": "putOrderByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "ID of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "header",
            "description": "Order object",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Adds a order to a customer"
          },
          "400": {
            "description": "Order ID invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "operationId": "deleteOrderByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "ID of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes a order of a customer"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Orders"
        ],
        "operationId": "patchOrderByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "ID of customer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "field",
            "in": "header",
            "description": "Field to update order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates a order of a customer"
          },
          "400": {
            "description": "Invalid field"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/canteens": {
      "get": {
        "tags": [
          "Canteens"
        ],
        "operationId": "getCanteens",
        "responses": {
          "200": {
            "description": "Lists all canteens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Canteen"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Canteens"
        ],
        "operationId": "putCanteen",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "List of Canteens",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Canteen"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Canteens have been added"
          }
        }
      }
    },
    "/components": {
      "get": {
        "tags": [
          "Components"
        ],
        "operationId": "getComponentsList",
        "parameters": [
          {
            "name": "canteenID",
            "in": "query",
            "description": "ID of canteen",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Component"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/component{id}": {
      "get": {
        "tags": [
          "Components"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Components"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Components"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 341321
          },
          "firstName": {
            "type": "string",
            "example": "Bob"
          },
          "lastName": {
            "type": "string",
            "example": "Smith"
          },
          "eMail": {
            "type": "string",
            "example": "bob.smith@example.com"
          },
          "language": {
            "type": "string",
            "example": "english"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64",
            "example": 341321
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 42
          },
          "weight": {
            "type": "integer",
            "format": "int64",
            "example": 300
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 3.99
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Component"
            }
          }
        }
      },
      "Canteen": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "location": {
            "type": "string",
            "example": null
          },
          "openHours": {
            "type": "string",
            "format": "time-hour",
            "example": 10
          },
          "closeHours": {
            "type": "string",
            "format": "time-hour",
            "example": 14
          }
        }
      },
      "Component": {
        "type": "object",
        "properties": {
          "canteenId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 42
          },
          "description": {
            "type": "string",
            "example": "Steak"
          },
          "calories": {
            "type": "integer",
            "format": "int64",
            "example": 800
          }
        }
      }
    }
  }
}